"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.DataTransformer=void 0;const DataTypes_1=require("../../shared/types/DataTypes");const logger_1=require("../../utils/logger");class DataTransformer{transformationRules;constructor(){this.transformationRules=new Map;this.registerDefaultTransformations()}registerDefaultTransformations(){this.registerTransformation({from:DataTypes_1.DataType.ANY,to:DataTypes_1.DataType.TEXT,transform:async t=>String(t)});this.registerTransformation({from:DataTypes_1.DataType.TEXT,to:DataTypes_1.DataType.NUMBER,transform:async t=>{const r=Number(t);if(isNaN(r))throw new Error(`Cannot convert "${t}" to number`);return r}});this.registerTransformation({from:DataTypes_1.DataType.TEXT,to:DataTypes_1.DataType.BOOLEAN,transform:async t=>{const r=String(t).toLowerCase();if("true"===r||"1"===r||"yes"===r)return true;if("false"===r||"0"===r||"no"===r)return false;return Boolean(t)}});this.registerTransformation({from:DataTypes_1.DataType.TEXT,to:DataTypes_1.DataType.PROMPT,transform:async t=>({text:String(t),type:"text",parameters:{}})});this.registerTransformation({from:DataTypes_1.DataType.SCRIPT,to:DataTypes_1.DataType.TEXT,transform:async t=>{try{return t.content}catch(r){logger_1.logger.error("Failed to transform script to text",{error:r instanceof Error?r.message:"Unknown error",valueType:typeof t});throw new Error(`Failed to transform script to text: ${r instanceof Error?r.message:"Unknown error"}`)}}});this.registerTransformation({from:DataTypes_1.DataType.TEXT,to:DataTypes_1.DataType.SCRIPT,transform:async t=>({content:String(t),scenes:[],duration:0,format:"plain"})});this.registerTransformation({from:DataTypes_1.DataType.ARRAY,to:DataTypes_1.DataType.TEXT,transform:async t=>{try{return JSON.stringify(t,null,2)}catch(r){logger_1.logger.error("Failed to transform array to JSON",{error:r instanceof Error?r.message:"Unknown error",valueType:typeof t});throw new Error(`Failed to transform array to JSON: ${r instanceof Error?r.message:"Unknown error"}`)}}});this.registerTransformation({from:DataTypes_1.DataType.OBJECT,to:DataTypes_1.DataType.TEXT,transform:async t=>{try{return JSON.stringify(t,null,2)}catch(r){logger_1.logger.error("Failed to transform object to JSON",{error:r instanceof Error?r.message:"Unknown error",valueType:typeof t});throw new Error(`Failed to transform object to JSON: ${r instanceof Error?r.message:"Unknown error"}`)}}});this.registerTransformation({from:DataTypes_1.DataType.IMAGE,to:DataTypes_1.DataType.TEXT,transform:async t=>{try{return t.path}catch(r){logger_1.logger.error("Failed to extract image path",{error:r instanceof Error?r.message:"Unknown error",valueType:typeof t});throw new Error(`Failed to extract image path: ${r instanceof Error?r.message:"Unknown error"}`)}}});this.registerTransformation({from:DataTypes_1.DataType.VIDEO,to:DataTypes_1.DataType.TEXT,transform:async t=>{try{return t.path}catch(r){logger_1.logger.error("Failed to extract video path",{error:r instanceof Error?r.message:"Unknown error",valueType:typeof t});throw new Error(`Failed to extract video path: ${r instanceof Error?r.message:"Unknown error"}`)}}});this.registerTransformation({from:DataTypes_1.DataType.AUDIO,to:DataTypes_1.DataType.TEXT,transform:async t=>{try{return t.path}catch(r){logger_1.logger.error("Failed to extract audio path",{error:r instanceof Error?r.message:"Unknown error",valueType:typeof t});throw new Error(`Failed to extract audio path: ${r instanceof Error?r.message:"Unknown error"}`)}}})}registerTransformation(t){const r=`${t.from}->${t.to}`;this.transformationRules.set(r,t)}async transform(t,r,e){if(r===e)return t;if(e===DataTypes_1.DataType.ANY)return t;if((0,DataTypes_1.isValidDataType)(t,e))return t;const a=`${r}->${e}`;const o=this.transformationRules.get(a);if(o)return await o.transform(t);const s=`${DataTypes_1.DataType.ANY}->${e}`;const n=this.transformationRules.get(s);if(n)return await n.transform(t);if(r!==DataTypes_1.DataType.TEXT&&e!==DataTypes_1.DataType.TEXT){const a=`${r}->${DataTypes_1.DataType.TEXT}`;const o=`${DataTypes_1.DataType.TEXT}->${e}`;if(this.transformationRules.has(a)&&this.transformationRules.has(o)){const a=await this.transform(t,r,DataTypes_1.DataType.TEXT);return await this.transform(a,DataTypes_1.DataType.TEXT,e)}}throw new Error(`No transformation available from ${r} to ${e}`)}async transformWithMapping(t,r){const e={};for(const a of r){const r=this.getNestedValue(t,a.sourceField);if(void 0!==r){let t=r;if(a.transform)t=a.transform(r);if(void 0!==t)this.setNestedValue(e,a.targetField,t)}}return e}validateDataType(t,r){return(0,DataTypes_1.isValidDataType)(t,r)}detectDataType(t){if(null===t||void 0===t)return DataTypes_1.DataType.ANY;if(this.isImageData(t))return DataTypes_1.DataType.IMAGE;if(this.isVideoData(t))return DataTypes_1.DataType.VIDEO;if(this.isAudioData(t))return DataTypes_1.DataType.AUDIO;if(this.isScriptData(t))return DataTypes_1.DataType.SCRIPT;if(this.isPromptData(t))return DataTypes_1.DataType.PROMPT;if(this.isCaptionData(t))return DataTypes_1.DataType.CAPTION;if(this.isFileData(t))return DataTypes_1.DataType.FILE;if(Array.isArray(t))return DataTypes_1.DataType.ARRAY;if("object"===typeof t)return DataTypes_1.DataType.OBJECT;if("string"===typeof t)return DataTypes_1.DataType.TEXT;if("number"===typeof t)return DataTypes_1.DataType.NUMBER;if("boolean"===typeof t)return DataTypes_1.DataType.BOOLEAN;return DataTypes_1.DataType.ANY}getNestedValue(t,r){return r.split(".").reduce((t,r)=>{if(t&&"object"===typeof t&&r in t)return t[r];return},t)}setNestedValue(t,r,e){const a=r.split(".");const o=a.pop();const s=a.reduce((t,r)=>{if(t&&"object"===typeof t){const e=t;if(!(r in e))e[r]={};return e[r]}return t},t);if(o&&s&&"object"===typeof s)s[o]=e}isFileData(t){return!!(t&&"object"===typeof t&&"string"===typeof t.path&&"string"===typeof t.mimeType&&"number"===typeof t.size)}isImageData(t){return this.isFileData(t)&&"number"===typeof t.width&&"number"===typeof t.height&&"string"===typeof t.format}isVideoData(t){return this.isFileData(t)&&"number"===typeof t.width&&"number"===typeof t.height&&"number"===typeof t.duration&&"number"===typeof t.fps}isAudioData(t){return this.isFileData(t)&&"number"===typeof t.duration&&"number"===typeof t.sampleRate&&"number"===typeof t.channels}isScriptData(t){return!!(t&&"object"===typeof t&&"string"===typeof t.content&&Array.isArray(t.scenes))}isPromptData(t){return!!(t&&"object"===typeof t&&"string"===typeof t.text&&["text","image","video","audio"].includes(t.type))}isCaptionData(t){return!!(t&&"object"===typeof t&&"string"===typeof t.text&&"number"===typeof t.startTime&&"number"===typeof t.endTime)}async transformArray(t,r,e){return Promise.all(t.map(t=>this.transform(t,r,e)))}mergeOutputs(t){if(0===t.length)return{};if(1===t.length)return t[0];if(t.every(t=>"object"===typeof t&&!Array.isArray(t)))return Object.assign({},...t);if(t.every(t=>Array.isArray(t)))return[].concat(...t);return t}extractArrayElements(t,r){if(!r)return t;return r.map(r=>t[r]).filter(t=>void 0!==t)}splitArray(t,r){const e=[];for(let a=0;a<t.length;a+=r)e.push(t.slice(a,a+r));return e}}exports.DataTransformer=DataTransformer;