"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,i,a){void 0===a&&(a=i);var r=Object.getOwnPropertyDescriptor(t,i);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[i]}}),Object.defineProperty(e,a,r)}:function(e,t,i,a){void 0===a&&(a=i),e[a]=t[i]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(){var ownKeys=function(e){return ownKeys=Object.getOwnPropertyNames||function(e){var t=[];for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[t.length]=i);return t},ownKeys(e)};return function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i=ownKeys(e),a=0;a<i.length;a++)"default"!==i[a]&&__createBinding(t,e,i[a]);return __setModuleDefault(t,e),t}}();Object.defineProperty(exports,"__esModule",{value:!0}),exports.CaptionGenerationNode=void 0;const BaseNode_1=require("./BaseNode"),DataTypes_1=require("../../../shared/types/DataTypes"),OutputConfigs_1=require("./OutputConfigs"),fs_1=require("fs"),path=__importStar(require("path")),uuid_1=require("uuid"),testMedia_1=require("../../../../config/testMedia"),CaptionFormatService_1=require("../../captions/CaptionFormatService"),CaptionTextProcessor_1=require("../../captions/CaptionTextProcessor"),CaptionTimingService_1=require("../../captions/CaptionTimingService"),CaptionVideoEmbedder_1=require("../../captions/CaptionVideoEmbedder"),logger_1=require("../../../utils/logger");class CaptionGenerationNode extends BaseNode_1.BaseNode{outputDir;captionFormatService;textProcessor;timingService;videoEmbedder;constructor(config){super({...config,type:"caption_generation"}),this.outputDir=process.env.CAPTION_OUTPUT_DIR??"./output/captions",this.captionFormatService=new CaptionFormatService_1.CaptionFormatService,this.textProcessor=new CaptionTextProcessor_1.CaptionTextProcessor,this.timingService=new CaptionTimingService_1.CaptionTimingService,this.videoEmbedder=new CaptionVideoEmbedder_1.CaptionVideoEmbedder(this.outputDir)}defineDefaultPorts(){return{inputs:[{name:"editedVideo",type:DataTypes_1.DataType.VIDEO,description:"Edited video from EditingNode",required:!0},{name:"adjustedTranscripts",type:DataTypes_1.DataType.ARRAY,description:"Adjusted transcripts from EditingNode with J-cut timing",required:!1},{name:"language",type:DataTypes_1.DataType.TEXT,description:"Language code (e.g., en, es, fr)",required:!1,defaultValue:"en"},{name:"maxLineLength",type:DataTypes_1.DataType.NUMBER,description:"Maximum characters per line",required:!1,defaultValue:42,validator:e=>"number"==typeof e&&e>=15&&e<=100},{name:"position",type:DataTypes_1.DataType.TEXT,description:"Caption position on screen",required:!1,defaultValue:"bottom",validator:e=>"string"==typeof e&&["bottom","middle","60percent"].includes(e)},{name:"fontSize",type:DataTypes_1.DataType.NUMBER,description:"Font size in pixels (40-80)",required:!1,defaultValue:54,validator:e=>"number"==typeof e&&e>=40&&e<=80},{name:"fontFamily",type:DataTypes_1.DataType.TEXT,description:"Font family for captions",required:!1,defaultValue:"Archivo Black",validator:e=>"string"==typeof e&&["Archivo Black","Bebas Neue","Impact","Oswald","Rubik Bold"].includes(e)},{name:"color",type:DataTypes_1.DataType.TEXT,description:"Text color (hex or name)",required:!1,defaultValue:"#FFFFFF"},{name:"outputFormat",type:DataTypes_1.DataType.TEXT,description:"Output format (srt, vtt, json, ass)",required:!1,defaultValue:"vtt"},{name:"embedInVideo",type:DataTypes_1.DataType.BOOLEAN,description:"Whether to embed captions directly in the video",required:!1,defaultValue:!0},{name:"outputPath",type:DataTypes_1.DataType.TEXT,description:"Custom output path for caption file",required:!1},{name:"lineHeight",type:DataTypes_1.DataType.NUMBER,description:"Line height multiplier (1.0 = normal, 1.5 = 150%)",required:!1,defaultValue:1,validator:e=>"number"==typeof e&&e>=.5&&e<=3},{name:"speechRate",type:DataTypes_1.DataType.NUMBER,description:"TTS speech rate multiplier (0.5 = half speed, 2.0 = double speed)",required:!1,defaultValue:1,validator:e=>"number"==typeof e&&e>=.5&&e<=2},{name:"captionLeadTime",type:DataTypes_1.DataType.NUMBER,description:"How early captions appear before speech (in seconds)",required:!1,defaultValue:.2,validator:e=>"number"==typeof e&&e>=0&&e<=1}],outputs:OutputConfigs_1.OutputPresets.captionGeneration()}}async execute(e,t){try{if(this.updateProgress(10),!e.editedVideo?.path)throw new Error("Edited video is required for caption generation");let t,i,a;if(e.adjustedTranscripts&&e.adjustedTranscripts.length>0){logger_1.logger.info(`[CaptionGenerationNode] Using ${e.adjustedTranscripts.length} adjusted transcripts`),logger_1.logger.debug("[CaptionGenerationNode] Transcript timings:",e.adjustedTranscripts.map((e,t)=>({index:t,text:e.text.substring(0,50)+"...",startTime:e.startTime,endTime:e.endTime,duration:e.endTime-e.startTime})));const i=e.language||"en",a=["japanese","korean","chinese-simplified","chinese-traditional"].includes(i.toLowerCase()),r=e.maxLineLength||(a?20:42);t=await this.timingService.generateFromAdjustedTranscripts(e.adjustedTranscripts,r,e.captionLeadTime),logger_1.logger.info(`[CaptionGenerationNode] Generated ${t.length} captions from transcripts`)}else logger_1.logger.info("[CaptionGenerationNode] No adjusted transcripts provided, transcribing video"),t=await this.generateFromMedia(e.editedVideo,e);if(this.updateProgress(70),t=this.timingService.applyStyling(t,e.position,e.fontSize,e.color),"true"!==process.env.USE_MOCK_SERVICES&&await fs_1.promises.mkdir(this.outputDir,{recursive:!0}),(0,testMedia_1.isTestMode)())i=(0,testMedia_1.getNextTestFile)("caption"),logger_1.logger.info(`[CaptionGenerationNode] TEST MODE - Using test caption: ${i}`);else{const t=`captions_${(0,uuid_1.v4)()}.${e.outputFormat||"srt"}`;i=e.outputPath||("true"===process.env.USE_MOCK_SERVICES?`/mock/${t}`:path.join(this.outputDir,t))}(0,testMedia_1.isTestMode)()||await this.saveCaptions(t,i,e.outputFormat||"ass",e),this.updateProgress(80),e.embedInVideo&&(a=await this.videoEmbedder.embedCaptionsInVideo(e.editedVideo,i,e.outputFormat||"srt",{fontFamily:e.fontFamily,position:e.position,fontSize:e.fontSize}),this.updateProgress(95));const r=t.length>0?t[t.length-1].endTime:0;return this.updateProgress(100),{success:!0,data:{captions:t,captionFile:i,videoWithCaptions:a,format:e.outputFormat||"srt",duration:r},metadata:{nodeId:this.config.id,captionCount:t.length,language:e.language||"en",embedded:!!a}}}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to generate captions"}}}async generateFromMedia(e,t){this.updateProgress(20);const i=await this.mockTranscribe({filePath:e.path,language:t.language,task:"transcribe",outputFormat:"verbose_json"});if(!i.success||!i.data)throw new Error(i.error||"Transcription failed");this.updateProgress(50);const a=[],r=i.data.segments||[];for(const e of r){const i=this.textProcessor.processText(e.text,t.language||"en",t.maxLineLength||42);for(let t=0;t<i.length;t++){const r=(e.end-e.start)/i.length,o=e.start+t*r,n=o+r;a.push({text:i[t],startTime:o,endTime:n})}}return a}async saveCaptions(e,t,i,a){if("true"===process.env.USE_MOCK_SERVICES||t.startsWith("/mock/"))return;const r=this.captionFormatService.convert(e,i,a);await fs_1.promises.writeFile(t,r,"utf8")}validateCustom(e){const t=e;return t.editedVideo?t.outputFormat&&!["srt","vtt","json","ass"].includes(t.outputFormat)?"Invalid output format. Must be srt, vtt, json, or ass":t.position&&!["bottom","middle","60percent"].includes(t.position)?"Invalid position. Must be bottom, middle, or 60percent":null:"Edited video is required for caption generation"}async mockTranscribe(e){const t=[{start:0,end:3,text:"Welcome to our video presentation."},{start:3,end:6,text:"Today we'll explore amazing content."},{start:6,end:10,text:"Let's dive into the details."},{start:10,end:15,text:"This is a demonstration of our workflow."},{start:15,end:20,text:"Thank you for watching!"}];return{success:!0,data:{text:t.map(e=>e.text).join(" "),segments:t,language:e.language||"en"}}}}exports.CaptionGenerationNode=CaptionGenerationNode;