"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(t,e,r,a){if(void 0===a)a=r;var o=Object.getOwnPropertyDescriptor(e,r);if(!o||("get"in o?!e.__esModule:o.writable||o.configurable))o={enumerable:true,get:function(){return e[r]}};Object.defineProperty(t,a,o)}:function(t,e,r,a){if(void 0===a)a=r;t[a]=e[r]});var __setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:true,value:e})}:function(t,e){t.default=e});var __importStar=this&&this.__importStar||function(){var ownKeys=function(t){ownKeys=Object.getOwnPropertyNames||function(t){var e=[];for(var r in t)if(Object.prototype.hasOwnProperty.call(t,r))e[e.length]=r;return e};return ownKeys(t)};return function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var r=ownKeys(t),a=0;a<r.length;a++)if("default"!==r[a])__createBinding(e,t,r[a]);__setModuleDefault(e,t);return e}}();Object.defineProperty(exports,"__esModule",{value:true});exports.CaptionGenerationNode=void 0;const BaseNode_1=require("./BaseNode");const DataTypes_1=require("../../../shared/types/DataTypes");const OutputConfigs_1=require("./OutputConfigs");const fs_1=require("fs");const path=__importStar(require("path"));const uuid_1=require("uuid");const child_process_1=require("child_process");const util_1=require("util");const logger_1=require("../../../utils/logger");class CaptionGenerationNode extends BaseNode_1.BaseNode{outputDir;constructor(t){super({...t,type:"caption_generation"});this.outputDir=process.env.CAPTION_OUTPUT_DIR??"./output/captions"}defineDefaultPorts(){return{inputs:[{name:"editedVideo",type:DataTypes_1.DataType.VIDEO,description:"Edited video from EditingNode",required:true},{name:"adjustedTranscripts",type:DataTypes_1.DataType.ARRAY,description:"Adjusted transcripts from EditingNode with J-cut timing",required:false},{name:"language",type:DataTypes_1.DataType.TEXT,description:"Language code (e.g., en, es, fr)",required:false,defaultValue:"en"},{name:"maxLineLength",type:DataTypes_1.DataType.NUMBER,description:"Maximum characters per line",required:false,defaultValue:42,validator:t=>"number"===typeof t&&t>=15&&t<=100},{name:"position",type:DataTypes_1.DataType.TEXT,description:"Caption position on screen",required:false,defaultValue:"bottom",validator:t=>"string"===typeof t&&["bottom","middle","60percent"].includes(t)},{name:"fontSize",type:DataTypes_1.DataType.NUMBER,description:"Font size in pixels (40-80)",required:false,defaultValue:54,validator:t=>"number"===typeof t&&t>=40&&t<=80},{name:"fontFamily",type:DataTypes_1.DataType.TEXT,description:"Font family for captions",required:false,defaultValue:"Archivo Black",validator:t=>"string"===typeof t&&["Archivo Black","Bebas Neue","Impact","Oswald","Rubik Bold"].includes(t)},{name:"color",type:DataTypes_1.DataType.TEXT,description:"Text color (hex or name)",required:false,defaultValue:"#FFFFFF"},{name:"outputFormat",type:DataTypes_1.DataType.TEXT,description:"Output format (srt, vtt, json, ass)",required:false,defaultValue:"vtt"},{name:"embedInVideo",type:DataTypes_1.DataType.BOOLEAN,description:"Whether to embed captions directly in the video",required:false,defaultValue:true},{name:"outputPath",type:DataTypes_1.DataType.TEXT,description:"Custom output path for caption file",required:false},{name:"lineHeight",type:DataTypes_1.DataType.NUMBER,description:"Line height multiplier (1.0 = normal, 1.5 = 150%)",required:false,defaultValue:1,validator:t=>"number"===typeof t&&t>=.5&&t<=3}],outputs:OutputConfigs_1.OutputPresets.captionGeneration()}}async execute(t,e){try{this.updateProgress(10);if(!t.editedVideo?.path)throw new Error("Edited video is required for caption generation");let e;if(t.adjustedTranscripts&&t.adjustedTranscripts.length>0)e=await this.generateFromAdjustedTranscripts(t.adjustedTranscripts,t.maxLineLength||42);else e=await this.generateFromMedia(t.editedVideo,t);this.updateProgress(70);e=this.applyStyling(e,t);if("true"!==process.env.USE_MOCK_SERVICES)await fs_1.promises.mkdir(this.outputDir,{recursive:true});const r=`captions_${(0,uuid_1.v4)()}.${t.outputFormat||"srt"}`;const a=t.outputPath||("true"===process.env.USE_MOCK_SERVICES?`/mock/${r}`:path.join(this.outputDir,r));await this.saveCaptions(e,a,t.outputFormat||"ass",t);this.updateProgress(80);let o;if(t.embedInVideo){o=await this.embedCaptionsInVideo(t.editedVideo,a,t.outputFormat||"srt",t.fontFamily,t.position,t.fontSize);this.updateProgress(95)}const i=e.length>0?e[e.length-1].endTime:0;this.updateProgress(100);return{success:true,data:{captions:e,captionFile:a,videoWithCaptions:o,format:t.outputFormat||"srt",duration:i},metadata:{nodeId:this.config.id,captionCount:e.length,language:t.language||"en",embedded:!!o}}}catch(t){return{success:false,error:t instanceof Error?t.message:"Failed to generate captions"}}}async generateFromMedia(t,e){this.updateProgress(20);const r=await this.mockTranscribe({filePath:t.path,language:e.language,task:"transcribe",outputFormat:"verbose_json"});if(!r.success||!r.data)throw new Error(r.error||"Transcription failed");this.updateProgress(50);const a=[];const o=r.data.segments||[];for(const t of o){const r=this.splitIntoLines(t.text,e.maxLineLength||42);for(let e=0;e<r.length;e++){const o=(t.end-t.start)/r.length;const i=t.start+e*o;const n=i+o;a.push({text:r[e],startTime:i,endTime:n})}}return a}splitIntoLines(t,e){const r=t.split(/\s+/);const a=[];let o="";for(const t of r)if(o.length+t.length+1<=e)o+=(o?" ":"")+t;else{if(o)a.push(o);o=t}if(o)a.push(o);return a}applyStyling(t,e){return t.map(t=>({...t,style:{position:e.position||"bottom",fontSize:e.fontSize||24,color:e.color||"#FFFFFF"}}))}async saveCaptions(t,e,r,a){if("true"===process.env.USE_MOCK_SERVICES||e.startsWith("/mock/"))return;let o;switch(r){case"srt":o=this.toSRT(t);break;case"vtt":o=this.toVTT(t);break;case"ass":o=this.toASS(t,a);break;case"json":o=JSON.stringify(t,null,2);break;default:throw new Error(`Unsupported caption format: ${r}`)}await fs_1.promises.writeFile(e,o,"utf8")}toSRT(t){return t.map((t,e)=>`${e+1}\n${this.formatSRTTime(t.startTime)} --\x3e ${this.formatSRTTime(t.endTime)}\n${t.text}\n`).join("\n")}toVTT(t){const e=["WEBVTT\n"];t.forEach((t,r)=>{const a=this.formatVTTTime(t.startTime);const o=this.formatVTTTime(t.endTime);e.push(`${r+1}\n${a} --\x3e ${o}\n${t.text}\n`)});return e.join("\n")}formatSRTTime(t){const e=Math.floor(t/3600);const r=Math.floor(t%3600/60);const a=Math.floor(t%60);const o=Math.floor(t%1*1e3);return`${String(e).padStart(2,"0")}:${String(r).padStart(2,"0")}:${String(a).padStart(2,"0")},${String(o).padStart(3,"0")}`}formatVTTTime(t){return this.formatSRTTime(t).replace(",",".")}toASS(t,e){const r=e?.fontFamily||"Archivo Black";const a=e?.fontSize||24;const o=e?.position||"bottom";let i="2";let n=50;if("middle"===o){i="5";n=0}else if("60percent"===o){i="2";n=768}const s=e?.lineHeight||1;return`[Script Info]\nTitle: Generated Captions\nScriptType: v4.00+\nPlayResX: 1080\nPlayResY: 1920\n\n[V4+ Styles]\nFormat: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding\nStyle: Default,${r},${a},&H00FFFFFF,&H000000FF,&H00000000,&H00000000,1,0,0,0,100,100,${Math.round(a*(s-1))},0,1,6,3,${i},30,30,${n},1\n\n[Events]\nFormat: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text\n`+t.map(t=>`Dialogue: 0,${this.formatASSTime(t.startTime)},${this.formatASSTime(t.endTime)},Default,,0,0,0,,${t.text}`).join("\n")}formatASSTime(t){const e=Math.floor(t/3600);const r=Math.floor(t%3600/60);const a=Math.floor(t%60);const o=Math.floor(t%1*100);return`${e}:${String(r).padStart(2,"0")}:${String(a).padStart(2,"0")}.${String(o).padStart(2,"0")}`}async generateFromAdjustedTranscripts(t,e=42){const r=[];for(const a of t){const t=this.splitIntoLines(a.text,e);const o=(a.endTime-a.startTime)/t.length;for(let e=0;e<t.length;e++){const i=a.startTime+e*o;const n=i+o;r.push({text:t[e],startTime:i,endTime:n})}}return r}async embedCaptionsInVideo(t,e,r,a,o,i){if("true"===process.env.USE_MOCK_SERVICES||t.path.startsWith("/mock/")){const e=`/mock/video_with_captions_${(0,uuid_1.v4)()}.mp4`;return{...t,path:e,size:5242880,metadata:{...t.metadata,hasCaptions:true,captionFormat:r}}}const n=(0,util_1.promisify)(child_process_1.exec);const s=`video_with_captions_${(0,uuid_1.v4)()}.mp4`;const u=path.join(this.outputDir,s);let p;const c=a||"Archivo Black";const d=i||24;if("ass"===r){const r=e.replace(/\\/g,"\\\\").replace(/'/g,"\\'").replace(/:/g,"\\:");p=`ffmpeg -i "${t.path}" -vf "subtitles='${r}'" -c:a copy "${u}"`}else{let r="2";const a="";if("middle"===o)r="5";const i=e.replace(/\\/g,"\\\\").replace(/'/g,"\\'").replace(/:/g,"\\:");const n=`FontName=${c.replace(" ","\\\\ ")},FontSize=${d},PrimaryColour=&HFFFFFF&,OutlineColour=&H000000&,BorderStyle=1,Outline=2,Shadow=0,Alignment=${r}${a}`;p=`ffmpeg -i "${t.path}" -vf "subtitles='${i}':force_style='${n}'" -c:a copy "${u}"`}try{const{stdout:t,stderr:e}=await n(p);if(t)logger_1.logger.debug("FFmpeg stdout:",t);if(e)logger_1.logger.debug("FFmpeg stderr:",e)}catch(t){logger_1.logger.error("FFmpeg error:",t);throw t}const l=await fs_1.promises.stat(u);return{...t,path:u,size:l.size,metadata:{...t.metadata,hasCaptions:true,captionFormat:r}}}validateCustom(t){const e=t;if(!e.editedVideo)return"Edited video is required for caption generation";if(e.outputFormat&&!["srt","vtt","json","ass"].includes(e.outputFormat))return"Invalid output format. Must be srt, vtt, json, or ass";if(e.position&&!["bottom","middle","60percent"].includes(e.position))return"Invalid position. Must be bottom, middle, or 60percent";return null}async mockTranscribe(t){const e=[{start:0,end:3,text:"Welcome to our video presentation."},{start:3,end:6,text:"Today we'll explore amazing content."},{start:6,end:10,text:"Let's dive into the details."},{start:10,end:15,text:"This is a demonstration of our workflow."},{start:15,end:20,text:"Thank you for watching!"}];return{success:true,data:{text:e.map(t=>t.text).join(" "),segments:e,language:t.language||"en"}}}}exports.CaptionGenerationNode=CaptionGenerationNode;