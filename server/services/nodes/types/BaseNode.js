"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BaseNode=exports.NodeState=void 0;const DataTypes_1=require("../../../shared/types/DataTypes"),logger_1=require("../../../utils/logger");var NodeState;!function(t){t.IDLE="idle",t.VALIDATING="validating",t.EXECUTING="executing",t.COMPLETED="completed",t.FAILED="failed",t.CANCELLED="cancelled"}(NodeState||(exports.NodeState=NodeState={}));class BaseNode{config;state=NodeState.IDLE;progress=0;startTime;endTime;lastError;onProgressCallback;constructor(config){this.config=config,this.config.ports||(this.config.ports=this.defineDefaultPorts())}validate(t){if(!this.config.ports)return null;for(const e of this.config.ports.inputs){const s=t[e.name],r=(0,DataTypes_1.validatePortValue)(e,s);if(r)return r}return this.validateCustom(t)}validateCustom(t){return null}async executeWithStateTracking(t,e,s){this.onProgressCallback=s,this.setState(NodeState.VALIDATING);const r=this.validate(t);if(r)return this.setState(NodeState.FAILED),this.lastError=r,{success:!1,error:r};this.setState(NodeState.EXECUTING),this.startTime=new Date,this.progress=0;try{if(e.signal?.aborted)throw new Error("Workflow cancelled");const s=await this.execute(t,e);return s.success?(this.setState(NodeState.COMPLETED),this.progress=100):(this.setState(NodeState.FAILED),this.lastError=s.error),this.endTime=new Date,this.onProgressCallback=void 0,s}catch(t){logger_1.logger.error(`Error executing node ${this.config.id}`,{nodeType:this.config.type,nodeLabel:this.config.label,error:t instanceof Error?t.message:String(t),stack:t instanceof Error?t.stack:void 0}),this.setState(NodeState.FAILED),this.endTime=new Date,this.lastError=t instanceof Error?t.message:String(t),this.onProgressCallback=void 0;const e=t;if("RATE_LIMIT_ERROR"===e?.code||"ETIMEDOUT"===e?.code||"ECONNRESET"===e?.code||"ECONNREFUSED"===e?.code)throw t;return{success:!1,error:this.lastError}}}async updateProgress(t){if(this.progress=Math.max(0,Math.min(100,t)),this.onProgressCallback){const t=this.onProgressCallback(this.progress);t instanceof Promise&&await t}}setState(t){this.state=t}getState(){return this.state}getProgress(){return this.progress}getExecutionTime(){return this.startTime&&this.endTime?this.endTime.getTime()-this.startTime.getTime():null}getConfig(){return this.config}getId(){return this.config.id}getType(){return this.config.type}getInputPorts(){return this.config.ports?.inputs||[]}getOutputPorts(){return this.config.ports?.outputs||[]}hasInputPort(t){return this.getInputPorts().some(e=>e.name===t)}hasOutputPort(t){return this.getOutputPorts().some(e=>e.name===t)}emit(t,e){}getInputPort(t){return this.getInputPorts().find(e=>e.name===t)}getOutputPort(t){return this.getOutputPorts().find(e=>e.name===t)}setProgressCallback(t){this.onProgressCallback=t}reset(){this.state=NodeState.IDLE,this.progress=0,this.startTime=void 0,this.endTime=void 0,this.lastError=void 0}getLastError(){return this.lastError}async cleanup(){}}exports.BaseNode=BaseNode;