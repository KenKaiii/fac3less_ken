"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.WorkflowValidator=void 0;class WorkflowValidator{validateWorkflow(o){if(!o.nodes||0===o.nodes.length)throw new Error("Workflow must contain at least one node");this.buildExecutionOrder(o);for(const t of o.edges){const e=o.nodes.find(o=>o.id===t.source);const r=o.nodes.find(o=>o.id===t.target);if(!e||!r)throw new Error(`Invalid edge: ${t.source} -> ${t.target}`)}}buildExecutionOrder(o){const t=new Map;const e=new Map;for(const r of o.nodes){t.set(r.id,[]);e.set(r.id,0)}for(const r of o.edges){const o=t.get(r.source)??[];o.push(r.target);t.set(r.source,o);e.set(r.target,(e.get(r.target)??0)+1)}const r=[];const s=[];for(const[o,t]of e)if(0===t)r.push(o);while(r.length>0){const o=r.shift();if(!o)continue;s.push(o);const n=t.get(o)||[];for(const o of n){const t=(e.get(o)||0)-1;e.set(o,t);if(0===t)r.push(o)}}if(s.length!==o.nodes.length)throw new Error("Workflow contains cycles");return s}}exports.WorkflowValidator=WorkflowValidator;