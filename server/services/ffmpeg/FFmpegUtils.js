"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,r,i){void 0===i&&(i=r);var s=Object.getOwnPropertyDescriptor(t,r);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,i,s)}:function(e,t,r,i){void 0===i&&(i=r),e[i]=t[r]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(){var ownKeys=function(e){return ownKeys=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},ownKeys(e)};return function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=ownKeys(e),i=0;i<r.length;i++)"default"!==r[i]&&__createBinding(t,e,r[i]);return __setModuleDefault(t,e),t}}();Object.defineProperty(exports,"__esModule",{value:!0}),exports.FFmpegUtils=void 0;const child_process_1=require("child_process"),util_1=require("util"),path=__importStar(require("path")),fs=__importStar(require("fs/promises")),logger_1=require("../../utils/logger"),execPromise=(0,util_1.promisify)(child_process_1.exec);class FFmpegUtils{static platformPaths=[];static pathAugmented=!1;static getPlatformPaths(){const e=[];switch(process.platform){case"darwin":e.push("/opt/homebrew/bin","/usr/local/bin","/usr/bin","/opt/local/bin","/Applications/ffmpeg/bin");break;case"linux":e.push("/usr/local/bin","/usr/bin","/bin","/snap/bin","/opt/ffmpeg/bin",`${process.env.HOME}/.local/bin`);break;case"win32":e.push("C:\\ffmpeg\\bin","C:\\Program Files\\ffmpeg\\bin","C:\\Program Files (x86)\\ffmpeg\\bin",`${process.env.LOCALAPPDATA}\\ffmpeg\\bin`,`${process.env.ProgramFiles}\\ffmpeg\\bin`)}return e.filter(e=>e)}static augmentPath(){this.pathAugmented||(this.platformPaths=this.getPlatformPaths(),this.pathAugmented=!0);const e=process.env.PATH||"",t="win32"===process.platform?";":":",r=e.split(t);for(const e of this.platformPaths)r.includes(e)||r.push(e);return r.join(t)}static async findExecutable(e){const t=this.augmentPath(),r="win32"===process.platform?";":":",i=t.split(r),s="win32"===process.platform?`${e}.exe`:e;for(const t of i){if(!t)continue;const r="win32"===process.platform?path.win32.join(t,s):path.join(t,s);try{return await fs.access(r,fs.constants.F_OK|fs.constants.X_OK),logger_1.logger.debug(`[FFmpegUtils] Found ${e} at: ${r}`),r}catch{}}return null}static async execWithFFmpeg(e,t){const r=this.augmentPath();logger_1.logger.debug(`[FFmpegUtils] Executing with PATH: ${r}`);try{const i=await execPromise(e,{env:{...process.env,PATH:r},encoding:"utf8",...t});return{stdout:i.stdout,stderr:i.stderr}}catch(e){const t=e;if(t.message?.includes("not found")||t.message?.includes("not recognized")){const e=await this.findExecutable("ffprobe"),i=await this.findExecutable("ffmpeg");throw logger_1.logger.error("[FFmpegUtils] FFmpeg/ffprobe not found in PATH"),logger_1.logger.error(`[FFmpegUtils] Searched paths: ${r}`),logger_1.logger.error(`[FFmpegUtils] Found ffmpeg: ${i||"NO"}`),logger_1.logger.error(`[FFmpegUtils] Found ffprobe: ${e||"NO"}`),new Error(`FFmpeg/ffprobe not found. Please ensure FFmpeg is installed and accessible. Searched in: ${this.platformPaths.join(", ")}. Original error: ${t.message}`)}throw t}}static async execFFprobe(e,t="-v quiet -print_format json -show_streams"){if(!e||""===e.trim())throw new Error(`Invalid file path for ffprobe: "${e}"`);if(!e.startsWith("http")&&!e.startsWith("rtmp"))try{await fs.access(e,fs.constants.F_OK)}catch{throw new Error(`File not found for ffprobe: "${e}"`)}const r=`ffprobe ${t} ${e.includes(" ")?`"${e}"`:e}`;return logger_1.logger.debug(`[FFmpegUtils] Executing ffprobe: ${r}`),this.execWithFFmpeg(r)}static async checkAvailability(){const e=await this.findExecutable("ffmpeg"),t=await this.findExecutable("ffprobe");return{ffmpeg:!!e,ffprobe:!!t,ffmpegPath:e||void 0,ffprobePath:t||void 0}}static async initialize(){const e=await this.checkAvailability();if(!e.ffmpeg||!e.ffprobe){const t=[];throw e.ffmpeg||t.push("ffmpeg"),e.ffprobe||t.push("ffprobe"),new Error(`Missing required tools: ${t.join(", ")}. Please install FFmpeg suite. Visit https://ffmpeg.org/download.html for installation instructions.`)}logger_1.logger.info("[FFmpegUtils] FFmpeg suite initialized successfully"),e.ffmpegPath&&logger_1.logger.debug(`[FFmpegUtils] ffmpeg location: ${e.ffmpegPath}`),e.ffprobePath&&logger_1.logger.debug(`[FFmpegUtils] ffprobe location: ${e.ffprobePath}`)}}exports.FFmpegUtils=FFmpegUtils;